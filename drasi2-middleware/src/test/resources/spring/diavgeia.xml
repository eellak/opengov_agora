<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:aop="http://www.springframework.org/schema/aop" xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:security="http://www.springframework.org/schema/security"
	xmlns:task="http://www.springframework.org/schema/task"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
						http://www.springframework.org/schema/task http://www.springframework.org/schema/task/spring-task-3.0.xsd
						http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.0.xsd
       					http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.0.xsd
	                    http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security-3.0.xsd	
	">
	
	
	<bean id="diavgeiaSessionFactoryReadWrite" class="org.springframework.orm.hibernate3.annotation.AnnotationSessionFactoryBean">
		<property name="dataSource" ref="dataSourceDiavgeiaWriter" />
		<property name="packagesToScan" value="gr.opengov.agora.bridges.diavgeia.domain"/>
		<property name="hibernateProperties">
			<props>
				<prop key="hibernate.dialect">org.hibernate.dialect.MySQLInnoDBDialect</prop>
				<prop key="hibernate.show_sql">false</prop>
				<prop key="hibernate.connection.zeroDateTimeBehavior">convertToNull</prop> 
				<!-- 
				<prop key="hibernate.transaction.factory_class">org.hibernate.transaction.JDBCTransactionFactory</prop>
				 -->			
			</props>
		</property>
	</bean>
	
	<bean id="diavgeiaSessionFactoryReadOnly" class="org.springframework.orm.hibernate3.annotation.AnnotationSessionFactoryBean">
		<property name="dataSource" ref="dataSourceDiavgeiaReader" />
		<property name="packagesToScan" value="gr.opengov.agora.bridges.diavgeia.domain"/>
		<property name="hibernateProperties">
			<props>
				<prop key="hibernate.dialect">org.hibernate.dialect.MySQLInnoDBDialect</prop>
				<prop key="hibernate.show_sql">false</prop>
				<prop key="hibernate.connection.zeroDateTimeBehavior">convertToNull</prop> 
				<!-- 
				<prop key="hibernate.transaction.factory_class">org.hibernate.transaction.JDBCTransactionFactory</prop>
				 -->			
			</props>
		</property>
	</bean>	

	<bean id="diavgeiaTransactionManagerReadWrite" class="org.springframework.orm.hibernate3.HibernateTransactionManager">
		<property name="sessionFactory" ref="diavgeiaSessionFactoryReadWrite" />
	</bean>
	
	<bean id="diavgeiaTransactionManagerReadOnly" class="org.springframework.orm.hibernate3.HibernateTransactionManager">
		<property name="sessionFactory" ref="diavgeiaSessionFactoryReadOnly" />
	</bean>	
	
	<bean id="diavgeiaConverter" class="gr.opengov.agora.bridges.diavgeia.DiavgeiaConverter">
	</bean>				
	
	<bean id="diavgeiaBridge" class="gr.opengov.agora.bridges.diavgeia.AgoraDiavgeiaBridge">
		<property name="accessControl" ref="accessControl"/>
		<property name="converter" ref="diavgeiaConverter"/>
		<property name="sessionFactoryRw" ref="diavgeiaSessionFactoryReadWrite"/>
		<property name="sessionFactoryRo" ref="diavgeiaSessionFactoryReadOnly"/>
	</bean>

	<tx:advice id="diavgeiaTxAdviceWrite" transaction-manager="diavgeiaTransactionManagerReadWrite">
		<tx:attributes>			
			<tx:method name="saveDecision" read-only="false"/>				
			<tx:method name="updateDecision" read-only="false"/>
			<tx:method name="deleteDecision" read-only="false"/>
			<!-- tx:method name="*" read-only="true"/-->
		</tx:attributes>
	</tx:advice>
	
	<tx:advice id="diavgeiaTxAdviceRead" transaction-manager="diavgeiaTransactionManagerReadOnly">
		<tx:attributes>			
			<tx:method name="*" read-only="true"/>
		</tx:attributes>
	</tx:advice>

	<aop:config>	
		<aop:pointcut id="diavgeiaBridgeSave" expression="execution(* gr.opengov.agora.bridges.diavgeia.IAgoraDiavgeiaBridge.save*(..))"/>		
		<aop:pointcut id="diavgeiaBridgeUpdate" expression="execution(* gr.opengov.agora.bridges.diavgeia.IAgoraDiavgeiaBridge.update*(..))"/>
		<aop:pointcut id="diavgeiaBridgeDelete" expression="execution(* gr.opengov.agora.bridges.diavgeia.IAgoraDiavgeiaBridge.delete*(..))"/>
		
		<aop:pointcut id="diavgeiaBridgeGet" expression="execution(* gr.opengov.agora.bridges.diavgeia.IAgoraDiavgeiaBridge.get*(..))"/>
		<aop:pointcut id="diavgeiaBridgeIs" expression="execution(* gr.opengov.agora.bridges.diavgeia.IAgoraDiavgeiaBridge.is*(..))"/>
		<aop:pointcut id="diavgeiaBridgeAre" expression="execution(* gr.opengov.agora.bridges.diavgeia.IAgoraDiavgeiaBridge.are*(..))"/>

		<aop:advisor advice-ref="diavgeiaTxAdviceWrite" pointcut-ref="diavgeiaBridgeSave" />
		<aop:advisor advice-ref="diavgeiaTxAdviceWrite" pointcut-ref="diavgeiaBridgeUpdate" />
		<aop:advisor advice-ref="diavgeiaTxAdviceWrite" pointcut-ref="diavgeiaBridgeDelete" />
		
		<aop:advisor advice-ref="diavgeiaTxAdviceRead" pointcut-ref="diavgeiaBridgeGet" />
		<aop:advisor advice-ref="diavgeiaTxAdviceRead" pointcut-ref="diavgeiaBridgeIs" />
		<aop:advisor advice-ref="diavgeiaTxAdviceRead" pointcut-ref="diavgeiaBridgeAre" />		
	</aop:config>	

</beans>
